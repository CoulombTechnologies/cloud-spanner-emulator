--- zetasql/base/BUILD
+++ zetasql/base/BUILD
@@ -20,1 +20,1 @@
-    default_visibility = [":zetasql_implementation"],
+    default_visibility = ["//visibility:public"],

--- zetasql/base/testing/BUILD
+++ zetasql/base/testing/BUILD
@@ -19,1 +19,1 @@
-package(default_visibility = ["//zetasql/base:zetasql_implementation"])
+package(default_visibility = ["//visibility:public"])

--- zetasql/public/json_value.h
+++ zetasql/public/json_value.h
@@ -81,9 +81,7 @@ struct JSONParsingOptions {
 // JSONValueParserBase (but this can be moved too).
 absl::Status IsValidJSON(
     absl::string_view json_str,
-    const JSONParsingOptions& parsing_options = {
-        .wide_number_mode = JSONParsingOptions::WideNumberMode::kRound,
-        .max_nesting = std::nullopt});
+    const JSONParsingOptions& parsing_options = JSONParsingOptions());

 // JSONValue stores a JSON document. Access to read and update the values and
 // their members and elements is provided through JSONValueRef and
@@ -118,9 +116,7 @@ class JSONValue final {
   // Parses a given JSON document string and returns a JSON value.
   static absl::StatusOr<JSONValue> ParseJSONString(
       absl::string_view str,
-      JSONParsingOptions parsing_options = {
-          .wide_number_mode = JSONParsingOptions::WideNumberMode::kRound,
-          .max_nesting = std::nullopt});
+      JSONParsingOptions parsing_options = JSONParsingOptions());

   // Decodes a binary representation of a JSON value produced by
   // JSONValueConstRef::SerializeAndAppendToProtoBytes(). Returns an error if
